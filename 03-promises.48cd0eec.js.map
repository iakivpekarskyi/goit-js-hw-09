{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAiB,CACrBC,MAAO,QACPC,aAAc,QAmChB,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAClCC,EAAiB,CAAEL,WAAUC,SAEjC,OAAO,IAAIK,SAAQ,SAACC,EAASC,GACvBN,EACFK,EAAQF,GAERG,EAAOH,E,IAxCAI,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAOH,EAAMI,OAAOf,MAAMgB,OAClCC,EAAOH,OAAOH,EAAMI,OAAOE,KAAKD,OAChCE,EAASJ,OAAOH,EAAMI,OAAOG,OAAOF,OAE/BG,EAAW,EAAGA,EAAWD,EAAQC,GAAY,EACpDrB,EAAcqB,EAAUN,GACrBO,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,YAAW,WACTC,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,MAC5CL,E,GAEHK,E,IAEJ2B,OAAM,SAAAN,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,YAAW,WACTC,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,MAC3CL,E,GAEDK,E,IAEPa,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst msgOptNotiflix = {\n  width: \"500px\",\n  borderRadius: \"15px\",\n};\n\nconst form = document.querySelector(\".form\");\nform.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(event.target.delay.value);\n  let step = Number(event.target.step.value);\n  let amount = Number(event.target.amount.value);\n\n  for (let position = 0; position < amount; position += 1) {\n    createPromise(position, delay) \n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`,\n            msgOptNotiflix\n          );\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`,\n            msgOptNotiflix\n          );\n        }, delay);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\nconst promiseOptions = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(promiseOptions);\n    } else {\n      reject(promiseOptions);\n    }\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$msgOptNotiflix","width","borderRadius","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","promiseOptions","Promise","resolve","reject","document","querySelector","addEventListener","event","preventDefault","delay1","Number","target","value","step","amount","position1","then","param","setTimeout","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.48cd0eec.js.map"}